@!@!@STARTMSG 2262:0 @!@!@
TLC2 Version 2.18 of Day Month 20?? (rev: f4d8c3d)
@!@!@ENDMSG 2262 @!@!@
@!@!@STARTMSG 2188:0 @!@!@
Running Random Simulation with seed 3782027665816900651 with 8 workers on 8 cores with 1883MB heap and 4234MB offheap memory [pid: 12873] (Linux 5.4.0-105-generic amd64, Ubuntu 11.0.14 x86_64).
@!@!@ENDMSG 2188 @!@!@
@!@!@STARTMSG 2220:0 @!@!@
Starting SANY...
@!@!@ENDMSG 2220 @!@!@
Parsing file /home/wego/modle_based_test_raft/tla/simulation_2022-04-01_17-28-37_1/MC.tla
Parsing file /home/wego/modle_based_test_raft/tla/simulation_2022-04-01_17-28-37_1/new_raft.tla
Parsing file /tmp/tlc-10057681095825842822/TLC.tla (jar:file:/home/wego/modle_based_test_raft/tlc-cmd/tla2tools.jar!/tla2sany/StandardModules/TLC.tla)
Parsing file /tmp/tlc-10057681095825842822/Naturals.tla (jar:file:/home/wego/modle_based_test_raft/tlc-cmd/tla2tools.jar!/tla2sany/StandardModules/Naturals.tla)
Parsing file /tmp/tlc-10057681095825842822/FiniteSets.tla (jar:file:/home/wego/modle_based_test_raft/tlc-cmd/tla2tools.jar!/tla2sany/StandardModules/FiniteSets.tla)
Parsing file /tmp/tlc-10057681095825842822/Sequences.tla (jar:file:/home/wego/modle_based_test_raft/tlc-cmd/tla2tools.jar!/tla2sany/StandardModules/Sequences.tla)
Semantic processing of module Naturals
Semantic processing of module Sequences
Semantic processing of module FiniteSets
Semantic processing of module TLC
Semantic processing of module new_raft
Semantic processing of module MC
@!@!@STARTMSG 2219:0 @!@!@
SANY finished.
@!@!@ENDMSG 2219 @!@!@
@!@!@STARTMSG 2185:0 @!@!@
Starting... (2022-04-01 17:28:38)
@!@!@ENDMSG 2185 @!@!@
@!@!@STARTMSG 2269:0 @!@!@
Computed 1 initial states...
@!@!@ENDMSG 2269 @!@!@
@!@!@STARTMSG 2109:1 @!@!@
Successor state is not completely specified by action DoHandleAppendEntriesResponse of the next-state relation. The following variable is not assigned: scr.

@!@!@ENDMSG 2109 @!@!@
@!@!@STARTMSG 2121:1 @!@!@
The behavior up to this point is:
@!@!@ENDMSG 2121 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
1: <Init line 305, col 9 to line 312, col 19 of module new_raft>
/\ elections = {}
/\ messages = {}
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Init">>
/\ state = (s1 :> Follower @@ s2 :> Follower @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {} @@ s3 :> {})
/\ scr = [nSent |-> 0, lock |-> Nil]
/\ votedFor = (s1 :> Nil @@ s2 :> Nil @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
2: <DoRestart line 673, col 36 to line 674, col 46 of module new_raft>
/\ elections = {}
/\ messages = {}
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Restart", s2>>
/\ state = (s1 :> Follower @@ s2 :> Follower @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {} @@ s3 :> {})
/\ scr = [nSent |-> 0, lock |-> Nil]
/\ votedFor = (s1 :> Nil @@ s2 :> Nil @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
3: <DoRestart line 673, col 36 to line 674, col 46 of module new_raft>
/\ elections = {}
/\ messages = {}
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Restart", s1>>
/\ state = (s1 :> Follower @@ s2 :> Follower @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {} @@ s3 :> {})
/\ scr = [nSent |-> 0, lock |-> Nil]
/\ votedFor = (s1 :> Nil @@ s2 :> Nil @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
4: <DoRestart line 673, col 36 to line 674, col 46 of module new_raft>
/\ elections = {}
/\ messages = {}
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Restart", s3>>
/\ state = (s1 :> Follower @@ s2 :> Follower @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {} @@ s3 :> {})
/\ scr = [nSent |-> 0, lock |-> Nil]
/\ votedFor = (s1 :> Nil @@ s2 :> Nil @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
5: <DoTimeout line 671, col 36 to line 672, col 46 of module new_raft>
/\ elections = {}
/\ messages = {}
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Timeout: election", s2>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 1 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [ lock |->
      [ type |-> RequestVoteRequest,
        args |-> {[from |-> s2, to |-> s1], [from |-> s2, to |-> s3]} ],
  nSent |-> 0 ]
/\ votedFor = (s1 :> Nil @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
6: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 1 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: RequestVote", s2, s1, 1>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 1 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [ lock |-> [type |-> RequestVoteRequest, args |-> {[from |-> s2, to |-> s3]}],
  nSent |-> 1 ]
/\ votedFor = (s1 :> Nil @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
7: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 1 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 2 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: RequestVote", s2, s3, 2>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 1 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [lock |-> Nil, nSent |-> 2]
/\ votedFor = (s1 :> Nil @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
8: <DoHandleRequestVoteRequest line 663, col 36 to line 664, col 80 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 2 ],
  [ type |-> RequestVoteResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 3 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"HandleRequestVoteRequest: demote and granted ", s1, s2, 1>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 2 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [nSent |-> 3, lock |-> Nil]
/\ votedFor = (s1 :> s2 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
9: <DoDuplicate line 677, col 36 to line 678, col 55 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 2 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 3 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Duplicate", Nil, Nil, 2>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 2 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [nSent |-> 4, lock |-> Nil]
/\ votedFor = (s1 :> s2 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
10: <DoDuplicate line 677, col 36 to line 678, col 55 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 2 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 3 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Duplicate", Nil, Nil, 2>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 2 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [nSent |-> 5, lock |-> Nil]
/\ votedFor = (s1 :> s2 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
11: <DoDuplicate line 677, col 36 to line 678, col 55 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 2 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 3 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Duplicate", Nil, Nil, 4>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 2 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [nSent |-> 6, lock |-> Nil]
/\ votedFor = (s1 :> s2 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
12: <DoDrop line 675, col 36 to line 676, col 50 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 3 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Drop", Nil, Nil, 2>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 2 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [nSent |-> 7, lock |-> Nil]
/\ votedFor = (s1 :> s2 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
13: <DoDuplicate line 677, col 36 to line 678, col 55 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 3 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Duplicate", Nil, Nil, 6>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 2 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [nSent |-> 8, lock |-> Nil]
/\ votedFor = (s1 :> s2 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
14: <DoDuplicate line 677, col 36 to line 678, col 55 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 3 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Duplicate", Nil, Nil, 6>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 2 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [nSent |-> 9, lock |-> Nil]
/\ votedFor = (s1 :> s2 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
15: <DoTimeout line 671, col 36 to line 672, col 46 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 3 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Timeout: election", s1>>
/\ state = (s1 :> Candidate @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [ lock |->
      [ type |-> RequestVoteRequest,
        args |-> {[from |-> s1, to |-> s2], [from |-> s1, to |-> s3]} ],
  nSent |-> 9 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
16: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 3 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: RequestVote", s1, s2, 10>>
/\ state = (s1 :> Candidate @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [ lock |-> [type |-> RequestVoteRequest, args |-> {[from |-> s1, to |-> s3]}],
  nSent |-> 10 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
17: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 3 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: RequestVote", s1, s3, 11>>
/\ state = (s1 :> Candidate @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [lock |-> Nil, nSent |-> 11]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
18: <DoHandleRequestVoteResponse line 665, col 36 to line 666, col 80 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"HandleRequestVoteResponse: promote", s2, s1, 3>>
/\ state = (s1 :> Candidate @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s1, s2} @@ s3 :> {})
/\ scr = [ lock |->
      [ type |-> AppendEntriesRequest,
        args |-> {[from |-> s2, to |-> s1], [from |-> s2, to |-> s3]} ],
  nSent |-> 11 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
19: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: AppendEntries", s2, s1, 12>>
/\ state = (s1 :> Candidate @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s1, s2} @@ s3 :> {})
/\ scr = [ lock |-> [type |-> AppendEntriesRequest, args |-> {[from |-> s2, to |-> s3]}],
  nSent |-> 12 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
20: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: AppendEntries", s2, s3, 13>>
/\ state = (s1 :> Candidate @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s1, s2} @@ s3 :> {})
/\ scr = [lock |-> Nil, nSent |-> 13]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
21: <DoAppendEntriesAll line 667, col 36 to line 668, col 55 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"AppendEntriesAll", s2>>
/\ state = (s1 :> Candidate @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s1, s2} @@ s3 :> {})
/\ scr = [ lock |->
      [ type |-> AppendEntriesRequest,
        args |-> {[from |-> s2, to |-> s1], [from |-> s2, to |-> s3]} ],
  nSent |-> 13 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
22: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: AppendEntries", s2, s1, 14>>
/\ state = (s1 :> Candidate @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s1, s2} @@ s3 :> {})
/\ scr = [ lock |-> [type |-> AppendEntriesRequest, args |-> {[from |-> s2, to |-> s3]}],
  nSent |-> 14 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
23: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 15 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: AppendEntries", s2, s3, 15>>
/\ state = (s1 :> Candidate @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 1)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s1, s2} @@ s3 :> {})
/\ scr = [lock |-> Nil, nSent |-> 15]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
24: <DoHandleAppendEntriesRequest line 659, col 36 to line 660, col 80 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"HandleAppendEntriesRequest: success", s3, s2, 15>>
/\ state = (s1 :> Candidate @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 2)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s1, s2} @@ s3 :> {})
/\ scr = [nSent |-> 16, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
25: <DoHandleAppendEntriesResponse line 661, col 36 to line 662, col 80 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 4 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"HandleAppendEntriesResponse: success", s2, s3, 16>>
/\ state = (s1 :> Candidate @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 2)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s1, s2} @@ s3 :> {})
/\ scr = [nSent |-> 16, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> Nil)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
26: <DoHandleRequestVoteRequest line 663, col 36 to line 664, col 80 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"HandleRequestVoteRequest: granted", s3, s2, 4>>
/\ state = (s1 :> Candidate @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 2)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s1, s2} @@ s3 :> {})
/\ scr = [nSent |-> 17, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s2)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
27: <DoRestart line 673, col 36 to line 674, col 46 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Restart", s2>>
/\ state = (s1 :> Candidate @@ s2 :> Follower @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 2)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {} @@ s3 :> {})
/\ scr = [nSent |-> 17, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s2)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
28: <DoDuplicate line 677, col 36 to line 678, col 55 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Duplicate", Nil, Nil, 13>>
/\ state = (s1 :> Candidate @@ s2 :> Follower @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 2)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {} @@ s3 :> {})
/\ scr = [nSent |-> 18, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s2)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
29: <DoDuplicate line 677, col 36 to line 678, col 55 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 19 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Duplicate", Nil, Nil, 12>>
/\ state = (s1 :> Candidate @@ s2 :> Follower @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 2 @@ s3 :> 2)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {} @@ s3 :> {})
/\ scr = [nSent |-> 19, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s2)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
30: <DoTimeout line 671, col 36 to line 672, col 46 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 19 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Timeout: election", s2>>
/\ state = (s1 :> Candidate @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 2)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [ lock |->
      [ type |-> RequestVoteRequest,
        args |-> {[from |-> s2, to |-> s1], [from |-> s2, to |-> s3]} ],
  nSent |-> 19 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s2)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
31: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 19 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: RequestVote", s2, s1, 20>>
/\ state = (s1 :> Candidate @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 2)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [ lock |-> [type |-> RequestVoteRequest, args |-> {[from |-> s2, to |-> s3]}],
  nSent |-> 20 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s2)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
32: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 19 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 21 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: RequestVote", s2, s3, 21>>
/\ state = (s1 :> Candidate @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 2)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [lock |-> Nil, nSent |-> 21]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s2)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
33: <DoHandleRequestVoteRequest line 663, col 36 to line 664, col 80 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 19 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 3, voteGranted |-> TRUE],
    seq |-> 22 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"HandleRequestVoteRequest: demote and granted ", s3, s2, 21>>
/\ state = (s1 :> Candidate @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 3)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {s1} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [nSent |-> 22, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s2)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
34: <DoRestart line 673, col 36 to line 674, col 46 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 19 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 3, voteGranted |-> TRUE],
    seq |-> 22 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Restart", s1>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 3)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [nSent |-> 22, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s2)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
35: <DoDuplicate line 677, col 36 to line 678, col 55 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 19 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 3, voteGranted |-> TRUE],
    seq |-> 22 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Duplicate", Nil, Nil, 9>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 3)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [nSent |-> 23, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s2)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
36: <DoRestart line 673, col 36 to line 674, col 46 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 12 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 19 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 3, voteGranted |-> TRUE],
    seq |-> 22 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Restart", s3>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 3)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [nSent |-> 23, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s2)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
37: <DoHandleAppendEntriesRequest line 659, col 36 to line 660, col 80 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 19 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 24 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 3, voteGranted |-> TRUE],
    seq |-> 22 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"HandleAppendEntriesRequest: stale msg", s1, s2, 12>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 3)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [nSent |-> 24, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s2)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
38: <DoHandleAppendEntriesResponse line 661, col 36 to line 662, col 80 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 19 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 3, voteGranted |-> TRUE],
    seq |-> 22 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"HandleAppendEntriesResponse: not leader", s2, s1, 24>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 3)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [nSent |-> 24, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s2)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
39: <DoHandleAppendEntriesRequest line 659, col 36 to line 660, col 80 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 3, voteGranted |-> TRUE],
    seq |-> 22 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"HandleAppendEntriesRequest: stale msg", s1, s2, 19>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 3)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {})
/\ scr = [nSent |-> 25, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s2)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
40: <DoTimeout line 671, col 36 to line 672, col 46 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 3, voteGranted |-> TRUE],
    seq |-> 22 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Timeout: election", s3>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {s3})
/\ scr = [ lock |->
      [ type |-> RequestVoteRequest,
        args |-> {[from |-> s3, to |-> s1], [from |-> s3, to |-> s2]} ],
  nSent |-> 25 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
41: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 3, voteGranted |-> TRUE],
    seq |-> 22 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: RequestVote", s3, s1, 26>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {s3})
/\ scr = [ lock |-> [type |-> RequestVoteRequest, args |-> {[from |-> s3, to |-> s2]}],
  nSent |-> 26 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
42: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 3, voteGranted |-> TRUE],
    seq |-> 22 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: RequestVote", s3, s2, 27>>
/\ state = (s1 :> Follower @@ s2 :> Candidate @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2} @@ s3 :> {s3})
/\ scr = [lock |-> Nil, nSent |-> 27]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
43: <DoHandleRequestVoteResponse line 665, col 36 to line 666, col 80 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"HandleRequestVoteResponse: promote", s2, s3, 22>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {s3})
/\ scr = [ lock |->
      [ type |-> AppendEntriesRequest,
        args |-> {[from |-> s2, to |-> s1], [from |-> s2, to |-> s3]} ],
  nSent |-> 27 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
44: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: AppendEntries", s2, s1, 28>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {s3})
/\ scr = [ lock |-> [type |-> AppendEntriesRequest, args |-> {[from |-> s2, to |-> s3]}],
  nSent |-> 28 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
45: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: AppendEntries", s2, s3, 29>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {s3})
/\ scr = [lock |-> Nil, nSent |-> 29]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
46: <DoRestart line 673, col 36 to line 674, col 46 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 6 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Restart", s1>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {s3})
/\ scr = [nSent |-> 29, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
47: <DoDrop line 675, col 36 to line 676, col 50 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 5 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Drop", Nil, Nil, 6>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {s3})
/\ scr = [nSent |-> 30, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
48: <DoDrop line 675, col 36 to line 676, col 50 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Drop", Nil, Nil, 5>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {s3})
/\ scr = [nSent |-> 31, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
49: <DoRestart line 673, col 36 to line 674, col 46 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Restart", s3>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {})
/\ scr = [nSent |-> 31, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
50: <DoAppendEntriesAll line 667, col 36 to line 668, col 55 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"AppendEntriesAll", s2>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {})
/\ scr = [ lock |->
      [ type |-> AppendEntriesRequest,
        args |-> {[from |-> s2, to |-> s1], [from |-> s2, to |-> s3]} ],
  nSent |-> 31 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
51: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 32 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: AppendEntries", s2, s1, 32>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {})
/\ scr = [ lock |-> [type |-> AppendEntriesRequest, args |-> {[from |-> s2, to |-> s3]}],
  nSent |-> 32 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
52: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 32 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 33 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s3,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 11 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: AppendEntries", s2, s3, 33>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {})
/\ scr = [lock |-> Nil, nSent |-> 33]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
53: <DoDrop line 675, col 36 to line 676, col 50 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 32 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 33 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, voteGranted |-> TRUE],
    seq |-> 17 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Drop", Nil, Nil, 11>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {})
/\ scr = [nSent |-> 34, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
54: <DoHandleRequestVoteResponse line 665, col 36 to line 666, col 80 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 32 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 33 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"HandleRequestVoteResponse: not candidate", s2, s3, 17>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {})
/\ scr = [nSent |-> 34, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
55: <DoDuplicate line 677, col 36 to line 678, col 55 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 32 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 33 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 35 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Duplicate", Nil, Nil, 23>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Follower)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 4)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {})
/\ scr = [nSent |-> 35, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
56: <DoTimeout line 671, col 36 to line 672, col 46 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 32 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 33 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 35 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Timeout: election", s3>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 5)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {s3})
/\ scr = [ lock |->
      [ type |-> RequestVoteRequest,
        args |-> {[from |-> s3, to |-> s1], [from |-> s3, to |-> s2]} ],
  nSent |-> 35 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
57: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 32 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 33 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 35 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 5, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 36 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: RequestVote", s3, s1, 36>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 5)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {s3})
/\ scr = [ lock |-> [type |-> RequestVoteRequest, args |-> {[from |-> s3, to |-> s2]}],
  nSent |-> 36 ]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
58: <DoLoop line 680, col 11 to line 697, col 56 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 32 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 33 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 35 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 5, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 36 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 5, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 37 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"DoLoop: RequestVote", s3, s2, 37>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 5)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {s3})
/\ scr = [lock |-> Nil, nSent |-> 37]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
59: <DoDuplicate line 677, col 36 to line 678, col 55 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 32 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 33 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 35 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 5, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 36 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 5, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 37 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 5, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 38 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<>> @@ s3 :> <<>>)
/\ pc = <<"Duplicate", Nil, Nil, 37>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 5)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {s3})
/\ scr = [nSent |-> 38, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
60: <DoClientRequest line 669, col 36 to line 670, col 55 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 32 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 33 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> AppendEntriesResponse,
    from |-> s3,
    to |-> s2,
    body |-> [term |-> 2, success |-> TRUE, curIdx |-> 0],
    seq |-> 16 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 35 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 5, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 36 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 5, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 37 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 5, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 38 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<[term |-> 3, value |-> v1]>> @@ s3 :> <<>>)
/\ pc = <<"ClientRequest", s2, v1>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 5)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {s3})
/\ scr = [nSent |-> 38, lock |-> Nil]
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
61: <DoHandleAppendEntriesResponse line 661, col 36 to line 662, col 80 of module new_raft>
/\ elections = {}
/\ messages = { [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 14 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 28 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 32 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 13 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 2,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 18 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 29 ],
  [ type |-> AppendEntriesRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [ log |-> <<>>,
          commitIndex |-> 0,
          term |-> 3,
          entries |-> <<>>,
          prevLogIndex |-> 0,
          prevLogTerm |-> 0 ],
    seq |-> 33 ],
  [ type |-> AppendEntriesResponse,
    from |-> s1,
    to |-> s2,
    body |-> [term |-> 3, success |-> FALSE, curIdx |-> 0],
    seq |-> 25 ],
  [ type |-> RequestVoteRequest,
    from |-> s1,
    to |-> s2,
    body |->
        [term |-> 3, candidate |-> s1, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 10 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s1,
    body |->
        [term |-> 3, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 20 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 8 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 9 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 23 ],
  [ type |-> RequestVoteRequest,
    from |-> s2,
    to |-> s3,
    body |->
        [term |-> 2, candidate |-> s2, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 35 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 26 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s1,
    body |->
        [term |-> 5, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 36 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 4, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 27 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 5, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 37 ],
  [ type |-> RequestVoteRequest,
    from |-> s3,
    to |-> s2,
    body |->
        [term |-> 5, candidate |-> s3, lastLogIdx |-> 0, lastLogTerm |-> 0],
    seq |-> 38 ] }
/\ matchIndex = ( s1 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s2 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) @@
  s3 :> (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0) )
/\ log = (s1 :> <<>> @@ s2 :> <<[term |-> 3, value |-> v1]>> @@ s3 :> <<>>)
/\ pc = <<"HandleAppendEntriesResponse: stale msg", s2, s3, 16>>
/\ state = (s1 :> Follower @@ s2 :> Leader @@ s3 :> Candidate)
/\ commitIndex = (s1 :> 0 @@ s2 :> 0 @@ s3 :> 0)
/\ currentTerm = (s1 :> 3 @@ s2 :> 3 @@ s3 :> 5)
/\ nextIndex = ( s1 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s2 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) @@
  s3 :> (s1 :> 1 @@ s2 :> 1 @@ s3 :> 1) )
/\ votesGranted = (s1 :> {} @@ s2 :> {s2, s3} @@ s3 :> {s3})
/\ scr = null
/\ votedFor = (s1 :> s1 @@ s2 :> s2 @@ s3 :> s3)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2209:0 @!@!@
Progress(135) at 2022-04-01 17:28:40: 106920 states generated, -1 distinct states found, -1 states left on queue.
@!@!@ENDMSG 2209 @!@!@
@!@!@STARTMSG 2210:0 @!@!@
The number of states generated: 106927
Simulation using seed 3782027665816900651 and aril 0
@!@!@ENDMSG 2210 @!@!@
@!@!@STARTMSG 2209:0 @!@!@
Progress(146) at 2022-04-01 17:28:40: 111722 states generated, -1 distinct states found, -1 states left on queue.
@!@!@ENDMSG 2209 @!@!@
@!@!@STARTMSG 2186:0 @!@!@
Finished in 2449ms at (2022-04-01 17:28:40)
@!@!@ENDMSG 2186 @!@!@
